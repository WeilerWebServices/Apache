<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project name="nunit" basedir="." default="echo"
  xmlns:au="antlib:org.apache.ant.antunit"
  xmlns:dn="antlib:org.apache.ant.dotnet">

  <import file="../augment-path.xml"/>

  <property name="build.dir" value="build"/>
  <property name="src.dir" location="src"/>

  <target name="setUp">
  <condition property="nunit.found">
    <or>
      <available file="nunit-console.exe" filepath="${augmented.PATH}"/>
      <available file="nunit-console.exe"/>
    </or>
  </condition>
    <mkdir dir="${build.dir}"/>
  </target>

  <target name="test-no-assembly">
    <au:expectfailure message="test assembly is required">
    <dn:nunit/>
    </au:expectfailure>
  </target>

  <target name="find-NUnit" if="nunit.found">
    <whichresource resource="/nunit.framework.dll" property="nunit"
      classpath="${augmented.PATH}"/>
  </target>

  <target name="extract-NUnit" depends="find-NUnit" if="nunit">
    <pathconvert property="nunit.framework.dll">
      <map from="file:///" to="/"/>
      <map from="file:/" to=""/>
      <url url="${nunit}"/>
    </pathconvert>
  </target>

  <target name="compile-pass" if="nunit" depends="extract-NUnit">
    <dn:csc destFile="${build.dir}/Pass.dll"
      targetType="library" references="${nunit.framework.dll}">
      <src dir="${src.dir}" includes="pass.cs"/>
    </dn:csc>
  </target>

  <target name="compile-fail" if="nunit" depends="extract-NUnit">
    <dn:csc destFile="${build.dir}/Fail.dll" 
      targetType="library" references="${nunit.framework.dll}">
      <src dir="${src.dir}" includes="fail.cs"/>
    </dn:csc>
  </target>

  <target name="test-passing" depends="compile-pass" if="nunit.found">
    <dn:nunit errorProperty="nunit.failed">
      <testassembly name="${build.dir}/Pass.dll"/>
    </dn:nunit>
  </target>

  <target name="test-failing" depends="compile-fail" if="nunit.found">
    <dn:nunit>
      <testassembly name="${build.dir}/Fail.dll"/>
    </dn:nunit>
  </target>

  <target name="test-failing-with-fail" depends="compile-fail" if="nunit.found">
    <au:expectfailure>
    <dn:nunit failonerror="true">
      <testassembly name="${build.dir}/Fail.dll"/>
    </dn:nunit>
    </au:expectfailure>
  </target>

  <target name="test-failing-errorproperty" depends="compile-fail" if="nunit.found">
    <dn:nunit errorProperty="nunit.failed">
      <testassembly name="${build.dir}/Fail.dll"/>
    </dn:nunit>
    <au:assertPropertySet name="nunit.failed"/>
  </target>

  <target name="tearDown">
    <delete dir="${build.dir}"/>
    <delete file="TestResult.xml" quiet="true"/>
  </target>
</project>
